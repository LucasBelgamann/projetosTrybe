{"ast":null,"code":"// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { EMAIL } from '../actions/actionTypes';\nconst INITIAL_STATE = {\n  email: '' // string que armazena o email da pessoa usuária\n\n};\n\nconst user = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : INITIAL_STATE;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case EMAIL:\n      return { ...state,\n        email: action.payload\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default user;","map":{"version":3,"names":["EMAIL","INITIAL_STATE","email","user","state","action","type","payload"],"sources":["/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-trybewallet/src/reducers/user.js"],"sourcesContent":["// Esse reducer será responsável por tratar as informações da pessoa usuária\nimport { EMAIL } from '../actions/actionTypes';\n\nconst INITIAL_STATE = {\n  email: '', // string que armazena o email da pessoa usuária\n};\n\nconst user = (state = INITIAL_STATE, action) => {\n  switch (action.type) {\n  case EMAIL:\n    return {\n      ...state,\n      email: action.payload,\n    };\n  default:\n    return state;\n  }\n};\n\nexport default user;\n"],"mappings":"AAAA;AACA,SAASA,KAAT,QAAsB,wBAAtB;AAEA,MAAMC,aAAa,GAAG;EACpBC,KAAK,EAAE,EADa,CACT;;AADS,CAAtB;;AAIA,MAAMC,IAAI,GAAG,YAAmC;EAAA,IAAlCC,KAAkC,uEAA1BH,aAA0B;EAAA,IAAXI,MAAW;;EAC9C,QAAQA,MAAM,CAACC,IAAf;IACA,KAAKN,KAAL;MACE,OAAO,EACL,GAAGI,KADE;QAELF,KAAK,EAAEG,MAAM,CAACE;MAFT,CAAP;;IAIF;MACE,OAAOH,KAAP;EAPF;AASD,CAVD;;AAYA,eAAeD,IAAf"},"metadata":{},"sourceType":"module"}