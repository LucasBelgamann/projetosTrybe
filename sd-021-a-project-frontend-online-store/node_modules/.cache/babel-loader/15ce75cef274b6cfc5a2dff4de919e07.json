{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projetosDaTrybe/sd-021-a-project-frontend-online-store/src/Components/EvaluationProduct.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nconst valuesList = [1, 1, 1, 1, 1];\n\nclass EvaluationProduct extends Component {\n  render() {\n    const {\n      onClick,\n      onChange,\n      email,\n      rating,\n      desc\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"evaluation\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }\n    }, \"Avalia\\xE7\\xE3o\"), /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-email\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"email\",\n      \"data-testid\": \"product-detail-email\",\n      value: email,\n      name: \"email\",\n      id: \"input-email\",\n      className: \"input-email\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"input-radio\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, valuesList.map((elem, index) => /*#__PURE__*/React.createElement(\"input\", {\n      key: index,\n      type: \"radio\",\n      id: \"input-radio\",\n      value: elem + index,\n      name: \"rating\",\n      checked: parseInt(rating, 10) === elem + index,\n      \"data-testid\": `${index + 1}-rating`,\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 19\n      }\n    })))), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"text-area\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      \"data-testid\": \"product-detail-evaluation\",\n      value: desc,\n      name: \"desc\",\n      id: \"text-area\",\n      className: \"text-area\",\n      onChange: onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"submit-review-btn\",\n      onClick: onClick,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, \"Mandar\")));\n  }\n\n}\n\nEvaluationProduct.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  desc: PropTypes.string.isRequired\n};\nexport default EvaluationProduct;","map":{"version":3,"sources":["/home/lucas/projetosDaTrybe/sd-021-a-project-frontend-online-store/src/Components/EvaluationProduct.js"],"names":["React","Component","PropTypes","valuesList","EvaluationProduct","render","onClick","onChange","email","rating","desc","props","map","elem","index","parseInt","propTypes","func","isRequired","string","number"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,MAAMC,UAAU,GAAG,CAAC,CAAD,EAAI,CAAJ,EAAO,CAAP,EAAU,CAAV,EAAa,CAAb,CAAnB;;AAEA,MAAMC,iBAAN,SAAgCH,SAAhC,CAA0C;AACxCI,EAAAA,MAAM,GAAG;AACP,UAAM;AACJC,MAAAA,OADI;AAEJC,MAAAA,QAFI;AAGJC,MAAAA,KAHI;AAIJC,MAAAA,MAJI;AAKJC,MAAAA;AALI,QAMF,KAAKC,KANT;AAOA,wBACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,MAAA,IAAI,EAAC,OADP;AAEE,qBAAY,sBAFd;AAGE,MAAA,KAAK,EAAGH,KAHV;AAIE,MAAA,IAAI,EAAC,OAJP;AAKE,MAAA,EAAE,EAAC,aALL;AAME,MAAA,SAAS,EAAC,aANZ;AAOE,MAAA,QAAQ,EAAGD,QAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAO,MAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGIJ,UAAU,CAACS,GAAX,CAAe,CAACC,IAAD,EAAOC,KAAP,kBACb;AACE,MAAA,GAAG,EAAGA,KADR;AAEE,MAAA,IAAI,EAAC,OAFP;AAGE,MAAA,EAAE,EAAC,aAHL;AAIE,MAAA,KAAK,EAAGD,IAAI,GAAGC,KAJjB;AAKE,MAAA,IAAI,EAAC,QALP;AAOE,MAAA,OAAO,EAAGC,QAAQ,CAACN,MAAD,EAAS,EAAT,CAAR,KAAyBI,IAAI,GAAGC,KAP5C;AAQE,qBAAe,GAAEA,KAAK,GAAG,CAAE,SAR7B;AASE,MAAA,QAAQ,EAAGP,QATb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHJ,CADF,CAZF,eAgCE;AAAO,MAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AACE,qBAAY,2BADd;AAEE,MAAA,KAAK,EAAGG,IAFV;AAGE,MAAA,IAAI,EAAC,MAHP;AAIE,MAAA,EAAE,EAAC,WAJL;AAKE,MAAA,SAAS,EAAC,WALZ;AAME,MAAA,QAAQ,EAAGH,QANb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAhCF,eA0CE;AACE,MAAA,IAAI,EAAC,QADP;AAEE,qBAAY,mBAFd;AAGE,MAAA,OAAO,EAAGD,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CF,CAFF,CADF;AAuDD;;AAhEuC;;AAmE1CF,iBAAiB,CAACY,SAAlB,GAA8B;AAC5BV,EAAAA,OAAO,EAAEJ,SAAS,CAACe,IAAV,CAAeC,UADI;AAE5BX,EAAAA,QAAQ,EAAEL,SAAS,CAACe,IAAV,CAAeC,UAFG;AAG5BV,EAAAA,KAAK,EAAEN,SAAS,CAACiB,MAAV,CAAiBD,UAHI;AAI5BT,EAAAA,MAAM,EAAEP,SAAS,CAACkB,MAAV,CAAiBF,UAJG;AAK5BR,EAAAA,IAAI,EAAER,SAAS,CAACiB,MAAV,CAAiBD;AALK,CAA9B;AAQA,eAAed,iBAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst valuesList = [1, 1, 1, 1, 1];\n\nclass EvaluationProduct extends Component {\n  render() {\n    const {\n      onClick,\n      onChange,\n      email,\n      rating,\n      desc,\n    } = this.props;\n    return (\n      <div className=\"evaluation\">\n        <h4>Avaliação</h4>\n        <form>\n          <label htmlFor=\"input-email\">\n            <input\n              type=\"email\"\n              data-testid=\"product-detail-email\"\n              value={ email }\n              name=\"email\"\n              id=\"input-email\"\n              className=\"input-email\"\n              onChange={ onChange }\n            />\n          </label>\n          <div>\n            <label htmlFor=\"input-radio\">\n\n              {\n                valuesList.map((elem, index) => (\n                  <input\n                    key={ index }\n                    type=\"radio\"\n                    id=\"input-radio\"\n                    value={ elem + index }\n                    name=\"rating\"\n                    \n                    checked={ parseInt(rating, 10) === elem + index }\n                    data-testid={ `${index + 1}-rating` }\n                    onChange={ onChange }\n                  />\n                ))\n              }\n            </label>\n          </div>\n          <label htmlFor=\"text-area\">\n            <textarea\n              data-testid=\"product-detail-evaluation\"\n              value={ desc }\n              name=\"desc\"\n              id=\"text-area\"\n              className=\"text-area\"\n              onChange={ onChange }\n            />\n          </label>\n          <button\n            type=\"button\"\n            data-testid=\"submit-review-btn\"\n            onClick={ onClick }\n          >\n            Mandar\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nEvaluationProduct.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  onChange: PropTypes.func.isRequired,\n  email: PropTypes.string.isRequired,\n  rating: PropTypes.number.isRequired,\n  desc: PropTypes.string.isRequired,\n};\n\nexport default EvaluationProduct;\n"]},"metadata":{},"sourceType":"module"}