{"ast":null,"code":"var _jsxFileName = \"/home/lucas/projetosDaTrybe/sd-021-a-project-frontend-online-store/src/Components/Cart.js\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport CartItem from './CartItem';\nimport { addItem, getSavedItens, removeItem } from '../services/saveProduct';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cartListRepeated: [],\n      arrayOrder: []\n    };\n    this.handleCartList = this.handleCartList.bind(this);\n    this.onClickRmv = this.onClickRmv.bind(this);\n    this.onClickAdd = this.onClickAdd.bind(this);\n    this.getArrayOrder = this.getArrayOrder.bind(this);\n  }\n\n  componentDidMount() {\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    const setArrayOrder = this.getArrayOrder(setList);\n    this.setState({\n      cartListRepeated: setList,\n      arrayOrder: setArrayOrder\n    });\n  }\n\n  handleCartList(cartList) {\n    const objList = cartList.reduce((acc, elem) => {\n      if (!acc[0].product) {\n        const prodObj = {\n          product: elem,\n          quantity: 1\n        };\n        acc.splice(0, 1, prodObj);\n      } else {\n        const itemList = acc.find(p => p.product.id === elem.id);\n        const index = acc.indexOf(itemList);\n\n        if (itemList) {\n          const prodObj = {\n            product: elem,\n            quantity: parseInt(itemList.quantity, 10) + 1\n          };\n          acc.splice(index, 1, prodObj);\n        } else {\n          const prodObj = {\n            product: elem,\n            quantity: 1\n          };\n          acc.push(prodObj);\n        }\n      }\n\n      return acc;\n    }, [{\n      product: '',\n      quantity: 0\n    }]);\n    return objList;\n  }\n\n  onClickRmv(item) {\n    removeItem(item);\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    this.setState({\n      cartListRepeated: setList\n    });\n  }\n\n  onClickAdd(item) {\n    addItem(item);\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    this.setState({\n      cartListRepeated: setList\n    });\n  }\n\n  getArrayOrder(array) {\n    const order = array.map(item => item.product.id);\n    return order;\n  }\n\n  render() {\n    const {\n      cartListRepeated,\n      arrayOrder\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"cart\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 7\n      }\n    }, getSavedItens().length ? /*#__PURE__*/React.createElement(CartItem, {\n      arrayOrder: arrayOrder,\n      cartList: cartListRepeated,\n      onClickRmv: this.onClickRmv,\n      onClickAdd: this.onClickAdd,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }) : /*#__PURE__*/React.createElement(\"span\", {\n      \"data-testid\": \"shopping-cart-empty-message\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, \"Seu carrinho est\\xE1 vazio\"), /*#__PURE__*/React.createElement(Link, {\n      to: \"/Checkout\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      type: \"button\",\n      \"data-testid\": \"checkout-products\",\n      className: \"button-final\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"i\", {\n      className: \"fa-solid fa-cart-plus\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }\n    }), \"Finalizar a compra\")));\n  }\n\n} // Cart.propTypes = {\n//   cartListRepeated: PropTypes.shape({\n//     product: PropTypes.arrayOf,\n//     quantity: PropTypes.number,\n//   }).isRequired,\n// };\n\n\nexport default Cart;","map":{"version":3,"sources":["/home/lucas/projetosDaTrybe/sd-021-a-project-frontend-online-store/src/Components/Cart.js"],"names":["React","Link","CartItem","addItem","getSavedItens","removeItem","Cart","Component","constructor","props","state","cartListRepeated","arrayOrder","handleCartList","bind","onClickRmv","onClickAdd","getArrayOrder","componentDidMount","setCartList","setList","setArrayOrder","setState","cartList","objList","reduce","acc","elem","product","prodObj","quantity","splice","itemList","find","p","id","index","indexOf","parseInt","push","item","array","order","map","render","length"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport CartItem from './CartItem';\nimport { addItem, getSavedItens, removeItem } from '../services/saveProduct';\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      cartListRepeated: [],\n      arrayOrder: [],\n    };\n\n    this.handleCartList = this.handleCartList.bind(this);\n    this.onClickRmv = this.onClickRmv.bind(this);\n    this.onClickAdd = this.onClickAdd.bind(this);\n    this.getArrayOrder = this.getArrayOrder.bind(this);\n  }\n\n  componentDidMount() {\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    const setArrayOrder = this.getArrayOrder(setList);\n    this.setState({\n      cartListRepeated: setList,\n      arrayOrder: setArrayOrder,\n    });\n  }\n\n  handleCartList(cartList) {\n    const objList = cartList.reduce((acc, elem) => {\n      if (!acc[0].product) {\n        const prodObj = { product: elem, quantity: 1 };\n        acc.splice(0, 1, prodObj);\n      } else {\n        const itemList = acc.find((p) => p.product.id === elem.id);\n        const index = acc.indexOf(itemList);\n        if (itemList) {\n          const prodObj = {\n            product: elem,\n            quantity: parseInt(itemList.quantity, 10) + 1,\n          };\n          acc.splice(index, 1, prodObj);\n        } else {\n          const prodObj = { product: elem, quantity: 1 };\n          acc.push(prodObj);\n        }\n      }\n      return acc;\n    }, [{ product: '', quantity: 0 }]);\n    return objList;\n  }\n\n  onClickRmv(item) {\n    removeItem(item);\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    this.setState({ cartListRepeated: setList });\n  }\n\n  onClickAdd(item) {\n    addItem(item);\n    const setCartList = getSavedItens();\n    const setList = this.handleCartList(setCartList);\n    this.setState({ cartListRepeated: setList });\n  }\n\n  getArrayOrder(array) {\n    const order = array.map((item) => item.product.id);\n    return order;\n  }\n\n  render() {\n    const { cartListRepeated, arrayOrder } = this.state;\n    return (\n      <div className=\"cart\">\n        {getSavedItens().length ? (\n          <CartItem\n            arrayOrder={ arrayOrder }\n            cartList={ cartListRepeated }\n            onClickRmv={ this.onClickRmv }\n            onClickAdd={ this.onClickAdd }\n          />\n        ) : (\n          <span data-testid=\"shopping-cart-empty-message\">Seu carrinho está vazio</span>\n        )}\n        <Link to=\"/Checkout\">\n          <button type=\"button\" data-testid=\"checkout-products\" className=\"button-final\">\n          <i className=\"fa-solid fa-cart-plus\" />\n          {}\n            Finalizar a compra\n          </button>\n        </Link>\n      </div>\n    );\n  }\n}\n\n// Cart.propTypes = {\n//   cartListRepeated: PropTypes.shape({\n//     product: PropTypes.arrayOf,\n//     quantity: PropTypes.number,\n//   }).isRequired,\n// };\n\nexport default Cart;\n"]},"metadata":{},"sourceType":"module"}