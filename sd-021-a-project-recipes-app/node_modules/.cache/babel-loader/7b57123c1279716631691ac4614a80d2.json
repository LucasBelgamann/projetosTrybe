{"ast":null,"code":"var _jsxFileName = \"/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/pages/DoneRecipes.jsx\";\nimport React from 'react';\nimport Header from '../components/Header';\nimport '../styles/DoneRecipes.css';\nimport ButtonFilterDone from '../components/ButtonFilterDone';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction DoneRecipes() {\n  // const history = useHistory();\n  // const { isCopy, setCopy } = useContext(Context);\n  // const done = 'Done Recipes';\n  const bool = false; // const [localDone, setLocalDone] = useState([]);\n  // const handleShare = () => {\n  //   copy(\n  //     `http://localhost:3000${history.location.pathname.replace(\n  //       '/in-progress',\n  //       '',\n  //     )}`,\n  //   );\n  //   setCopy(true);\n  // };\n  // useEffect(() => {\n  //   const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  //   setLocalDone(doneRecipes);\n  // }, []);\n  // const verifyType = (item) => {\n  //   if (item.type === 'drink') {\n  //     const { pathname } = window.location;\n  //     const drinks = pathname === '/drinks';\n  //     return drinks;\n  //   }\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Done Recipes\",\n      hasSearch: bool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonFilterDone, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this) // <div>\n  //   <Header title={ done } hasSearch={ bool } />\n  //   <FiltersBtns />\n  //   <div className=\"done-recipe-div\">\n  //     {localDone && localDone.map((item, i) => (\n  //       <div className=\"done-recipe\" key={ i }>\n  //         <Link\n  //           to={ verifyType(item) === false\n  //             ? `/drinks/${item.id}`\n  //             : `/foods/${item.id}` }\n  //         >\n  //           <img\n  //             src={ item.image }\n  //             alt=\"imagem\"\n  //             data-testid={ `${i}-horizontal-image` }\n  //             className=\"img-done\"\n  //           />\n  //           <h1 data-testid={ `${i}-horizontal-name` }>{item.name}</h1>\n  //         </Link>\n  //         <h4\n  //           data-testid={ `${i}-horizontal-top-text` }\n  //         >\n  //           {item.nationality}\n  //           {' '}\n  //           -\n  //           {' '}\n  //           {item.category}\n  //         </h4>\n  //         <h3\n  //           data-testid={ `${i}-horizontal-top-text` }\n  //         >\n  //           { (item.alcoholicOrNot) ? item.alcoholicOrNot : null }\n  //         </h3>\n  //         <h3 data-testid={ `${i}-horizontal-done-date` }>{item.doneDate}</h3>\n  //         {item.tags.map((e) => (\n  //           <h4 data-testid={ `${i}-${e}-horizontal-tag` } key={ e }>\n  //             {e}\n  //           </h4>\n  //         ))}\n  //         {!isCopy ? <input\n  //           type=\"image\"\n  //           src={ share }\n  //           data-testid={ `${i}-horizontal-share-btn` }\n  //           alt=\"searchIcon\"\n  //           onClick={ handleShare }\n  //         /> : 'Link copied!'}\n  //       </div>\n  //     ))}\n  //   </div>\n  // </div>\n  ;\n}\n\n_c = DoneRecipes;\nexport default DoneRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"DoneRecipes\");","map":{"version":3,"names":["React","Header","ButtonFilterDone","DoneRecipes","bool"],"sources":["/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/pages/DoneRecipes.jsx"],"sourcesContent":["import React from 'react';\nimport Header from '../components/Header';\nimport '../styles/DoneRecipes.css';\nimport ButtonFilterDone from '../components/ButtonFilterDone';\n\nfunction DoneRecipes() {\n  // const history = useHistory();\n  // const { isCopy, setCopy } = useContext(Context);\n  // const done = 'Done Recipes';\n  const bool = false;\n  // const [localDone, setLocalDone] = useState([]);\n\n  // const handleShare = () => {\n  //   copy(\n  //     `http://localhost:3000${history.location.pathname.replace(\n  //       '/in-progress',\n  //       '',\n  //     )}`,\n  //   );\n  //   setCopy(true);\n  // };\n\n  // useEffect(() => {\n  //   const doneRecipes = JSON.parse(localStorage.getItem('doneRecipes'));\n  //   setLocalDone(doneRecipes);\n  // }, []);\n\n  // const verifyType = (item) => {\n  //   if (item.type === 'drink') {\n  //     const { pathname } = window.location;\n  //     const drinks = pathname === '/drinks';\n  //     return drinks;\n  //   }\n  // };\n\n  return (\n    <div>\n      <Header title=\"Done Recipes\" hasSearch={ bool } />\n      <ButtonFilterDone />\n    </div>\n    // <div>\n    //   <Header title={ done } hasSearch={ bool } />\n    //   <FiltersBtns />\n    //   <div className=\"done-recipe-div\">\n    //     {localDone && localDone.map((item, i) => (\n    //       <div className=\"done-recipe\" key={ i }>\n    //         <Link\n    //           to={ verifyType(item) === false\n    //             ? `/drinks/${item.id}`\n    //             : `/foods/${item.id}` }\n    //         >\n    //           <img\n    //             src={ item.image }\n    //             alt=\"imagem\"\n    //             data-testid={ `${i}-horizontal-image` }\n    //             className=\"img-done\"\n    //           />\n    //           <h1 data-testid={ `${i}-horizontal-name` }>{item.name}</h1>\n    //         </Link>\n    //         <h4\n    //           data-testid={ `${i}-horizontal-top-text` }\n    //         >\n    //           {item.nationality}\n    //           {' '}\n    //           -\n    //           {' '}\n    //           {item.category}\n    //         </h4>\n    //         <h3\n    //           data-testid={ `${i}-horizontal-top-text` }\n    //         >\n    //           { (item.alcoholicOrNot) ? item.alcoholicOrNot : null }\n\n  //         </h3>\n  //         <h3 data-testid={ `${i}-horizontal-done-date` }>{item.doneDate}</h3>\n  //         {item.tags.map((e) => (\n  //           <h4 data-testid={ `${i}-${e}-horizontal-tag` } key={ e }>\n  //             {e}\n  //           </h4>\n  //         ))}\n  //         {!isCopy ? <input\n  //           type=\"image\"\n  //           src={ share }\n  //           data-testid={ `${i}-horizontal-share-btn` }\n  //           alt=\"searchIcon\"\n  //           onClick={ handleShare }\n  //         /> : 'Link copied!'}\n  //       </div>\n  //     ))}\n  //   </div>\n  // </div>\n  );\n}\n\nexport default DoneRecipes;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAO,2BAAP;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;;;AAEA,SAASC,WAAT,GAAuB;EACrB;EACA;EACA;EACA,MAAMC,IAAI,GAAG,KAAb,CAJqB,CAKrB;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC,cAAd;MAA6B,SAAS,EAAGA;IAAzC;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,gBAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAKE;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAvDA;AAyDD;;KAvFQD,W;AAyFT,eAAeA,WAAf"},"metadata":{},"sourceType":"module"}