{"ast":null,"code":"var _jsxFileName = \"/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/context/Provider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './context';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ProviderRecipes(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [loginInput, setLogin] = useState({\n    email: '',\n    password: ''\n  });\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const [radios, setRadios] = useState('');\n  const [inputSearch, setInputSearch] = useState('');\n\n  const handleChange = _ref2 => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref2;\n    setLogin(oldState => ({ ...oldState,\n      [name]: value\n    }));\n    const tamMin = 6;\n    const regex = /\\w+@[a-z]+.com/g;\n\n    if (loginInput.email.match(regex) && loginInput.password.length >= tamMin) {\n      setDisabledBtn(false);\n    } else {\n      return setDisabledBtn(true);\n    }\n  };\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      if (radios === 'ingredient') {\n        const url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputSearch}`;\n        const getFetch = await fetch(url);\n        const dataJson = await getFetch.json();\n        return dataJson;\n      }\n\n      if (radios === 'name') {\n        const url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${inputSearch}`;\n        const getFetch = await fetch(url);\n        const dataJson = await getFetch.json();\n        return dataJson;\n      }\n\n      if (radios === 'firstLetter' && inputSearch.length === 1) {\n        try {\n          const url = `https://www.themealdb.com/api/json/v1/1/search.php?f=${inputSearch}`;\n          const getFetch = await fetch(url);\n          const dataJson = await getFetch.json();\n          return dataJson;\n        } catch (error) {\n          global.alert('Your search must have only 1 (one) character', error);\n        }\n      }\n\n      return null;\n    };\n\n    getRecipes();\n    console.log(inputSearch);\n  }, [inputSearch, radios]);\n  const contextValue = {\n    loginInput,\n    handleChange,\n    disabledBtn,\n    setRadios,\n    radios,\n    setInputSearch\n  };\n  return /*#__PURE__*/_jsxDEV(Context.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProviderRecipes, \"G5t5w9oMTZLJAVZocaj/W8POuBI=\");\n\n_c = ProviderRecipes;\nProviderRecipes.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default ProviderRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProviderRecipes\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Context","ProviderRecipes","children","loginInput","setLogin","email","password","disabledBtn","setDisabledBtn","radios","setRadios","inputSearch","setInputSearch","handleChange","target","name","value","oldState","tamMin","regex","match","length","getRecipes","url","getFetch","fetch","dataJson","json","error","global","alert","console","log","contextValue","propTypes","node","isRequired"],"sources":["/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/context/Provider.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Context from './context';\n\nfunction ProviderRecipes({ children }) {\n  const [loginInput, setLogin] = useState({\n    email: '',\n    password: '',\n  });\n  const [disabledBtn, setDisabledBtn] = useState(true);\n  const [radios, setRadios] = useState('');\n  const [inputSearch, setInputSearch] = useState('');\n\n  const handleChange = ({ target: { name, value } }) => {\n    setLogin((oldState) => ({ ...oldState, [name]: value }));\n    const tamMin = 6;\n    const regex = /\\w+@[a-z]+.com/g;\n    if (loginInput.email.match(regex) && loginInput.password.length >= tamMin) {\n      setDisabledBtn(false);\n    } else {\n      return setDisabledBtn(true);\n    }\n  };\n\n  useEffect(() => {\n    const getRecipes = async () => {\n      if (radios === 'ingredient') {\n        const url = `https://www.themealdb.com/api/json/v1/1/filter.php?i=${inputSearch}`;\n        const getFetch = await fetch(url);\n        const dataJson = await getFetch.json();\n        return dataJson;\n      }\n      if (radios === 'name') {\n        const url = `https://www.themealdb.com/api/json/v1/1/search.php?s=${inputSearch}`;\n        const getFetch = await fetch(url);\n        const dataJson = await getFetch.json();\n        return dataJson;\n      }\n      if (radios === 'firstLetter' && inputSearch.length === 1) {\n        try {\n          const url = `https://www.themealdb.com/api/json/v1/1/search.php?f=${inputSearch}`;\n          const getFetch = await fetch(url);\n          const dataJson = await getFetch.json();\n          return dataJson;\n        } catch (error) {\n          global.alert('Your search must have only 1 (one) character', error);\n        }\n      }\n      return null;\n    };\n    getRecipes();\n    console.log(inputSearch);\n  }, [inputSearch, radios]);\n\n  const contextValue = {\n    loginInput,\n    handleChange,\n    disabledBtn,\n    setRadios,\n    radios,\n    setInputSearch,\n  };\n\n  return (\n    <Context.Provider value={ contextValue }>\n      { children }\n    </Context.Provider>\n  );\n}\n\nProviderRecipes.propTypes = { children: PropTypes.node.isRequired };\n\nexport default ProviderRecipes;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}