{"ast":null,"code":"var _jsxFileName = \"/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/pages/FavoriteRecipes.jsx\";\nimport React from 'react'; // import { Link, useParams } from 'react-router-dom';\n// import FiltersBtns from '../components/FiltersBtns';\n\nimport Header from '../components/Header'; // import Context from '../context/context';\n// import share from '../images/shareIcon.svg';\n// import whiteHeartIcon from '../images/whiteHeartIcon.svg';\n// import blackHeartIcon from '../images/blackHeartIcon.svg';\n\nimport ButtonFilterFavorite from '../components/ButtonFilterFavorite';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction FavoritesRecipes() {\n  //   const { id } = useParams();\n  //   const favorite = 'Favorite Recipes';\n  const bool = false; //   const { isCopy,\n  //     setCopy,\n  //     favoritesArray,\n  //     isFavorite,\n  //     setIsFavorite,\n  //   } = useContext(Context);\n  //   const history = useHistory();\n  //   const [localFavorites, setlocalFavorites] = useState([]);\n  //   const [teste, setTeste] = useState(false);\n  //   const handleShare = () => {\n  //     copy(\n  //       `http://localhost:3000${history.location.pathname.replace(\n  //         '/in-progress',\n  //         '',\n  //       )}`,\n  //     );\n  //     setCopy(true);\n  //   };\n  //   useEffect(() => {\n  //     const favoritesRecipes = JSON.parse(\n  //       localStorage.getItem('favoriteRecipes'),\n  //     );\n  //     setlocalFavorites(favoritesRecipes);\n  //     if (favoritesArray.some((item) => item.id === id)) {\n  //       setIsFavorite(false);\n  //     }\n  //   }, []);\n  //   const verifyType = (item) => {\n  //     if (item.type === 'drink') {\n  //       const { pathname } = window.location;\n  //       const drinks = pathname === '/drinks';\n  //       return drinks;\n  //     }\n  //   };\n  //   const handleFavorites = (target) => {\n  //     console.log(target);\n  //     setTeste(!teste);\n  //     const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  //     let arrayFavorites = [];\n  //     if (\n  //       favoritesArray.length\n  //       && favoritesArray.some((item) => item.id === id)\n  //     ) {\n  //       setIsFavorite(true);\n  //     } else {\n  //       setIsFavorite(false);\n  //     }\n  //     if (\n  //       favorites.length\n  //       && favorites.some((item) => item.id === id)\n  //     ) {\n  //       arrayFavorites = favorites.filter((e) => e.id !== target);\n  //       localStorage.setItem('favoriteRecipes', JSON.stringify(arrayFavorites));\n  //       setFavoritesArray(arrayFavorites);\n  //     }\n  //   };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"Favorite Recipes\",\n      hasSearch: bool\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonFilterFavorite, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this) //     <div>\n  //       {console.log('ai', localFavorites)}\n  //       <Header title={ favorite } hasSearch={ bool } />\n  //       <FiltersBtns />\n  //       <div>\n  //         {localFavorites\n  //           && localFavorites.map((item, i) => (\n  //             <div key={ i }>\n  //               <Link\n  //                 to={\n  //                   verifyType(item) === false\n  //                     ? `/drinks/${item.id}`\n  //                     : `/foods/${item.id}`\n  //                 }\n  //               >\n  //                 <img\n  //                   src={ item.image }\n  //                   alt=\"imagem\"\n  //                   data-testid={ `${i}-horizontal-image` }\n  //                   className=\"img-done\"\n  //                 />\n  //                 <h1 data-testid={ `${i}-horizontal-name` }>{item.name}</h1>\n  //               </Link>\n  //               <h4 data-testid={ `${i}-horizontal-top-text` }>\n  //                 {item.nationality}\n  //                 {' '}\n  //                 -\n  //                 {' '}\n  //                 {item.category}\n  //               </h4>\n  //               <h3 data-testid={ `${i}-horizontal-top-text` }>\n  //                 {item.alcoholicOrNot ? item.alcoholicOrNot : null}\n  //               </h3>\n  //               <h3 data-testid={ `${i}-horizontal-done-date` }>{item.doneDate}</h3>\n  //               {item.tags.map((e) => (\n  //                 <h4 data-testid={ `${i}-${e}-horizontal-tag` } key={ e }>\n  //                   {e}\n  //                 </h4>\n  //               ))}\n  //               {!isCopy ? (\n  //                 <input\n  //                   type=\"image\"\n  //                   src={ share }\n  //                   data-testid={ `${i}-horizontal-share-btn` }\n  //                   alt=\"searchIcon\"\n  //                   onClick={ handleShare }\n  //                 />\n  //               ) : (\n  //                 'Link copied!'\n  //               )}\n  //               <button\n  //                 type=\"button\"\n  //                 onClick={ () => handleFavorites(item.id) }\n  //               >\n  //                 <img\n  //                   src={ !isFavorite ? blackHeartIcon : whiteHeartIcon }\n  //                   alt=\"blackHeart\"\n  //                   data-testid=\"favorite-btn\"\n  //                 />\n  //               </button>\n  //             </div>\n  //           ))}\n  //       </div>\n  //     </div>\n  ;\n}\n\n_c = FavoritesRecipes;\nexport default FavoritesRecipes;\n\nvar _c;\n\n$RefreshReg$(_c, \"FavoritesRecipes\");","map":{"version":3,"names":["React","Header","ButtonFilterFavorite","FavoritesRecipes","bool"],"sources":["/home/lucas/trybe/projetosDaTrybe/sd-021-a-project-recipes-app/src/pages/FavoriteRecipes.jsx"],"sourcesContent":["import React from 'react';\n// import { Link, useParams } from 'react-router-dom';\n// import FiltersBtns from '../components/FiltersBtns';\nimport Header from '../components/Header';\n// import Context from '../context/context';\n// import share from '../images/shareIcon.svg';\n// import whiteHeartIcon from '../images/whiteHeartIcon.svg';\n// import blackHeartIcon from '../images/blackHeartIcon.svg';\nimport ButtonFilterFavorite from '../components/ButtonFilterFavorite';\n\nfunction FavoritesRecipes() {\n//   const { id } = useParams();\n//   const favorite = 'Favorite Recipes';\n  const bool = false;\n  //   const { isCopy,\n  //     setCopy,\n  //     favoritesArray,\n  //     isFavorite,\n  //     setIsFavorite,\n  //   } = useContext(Context);\n  //   const history = useHistory();\n  //   const [localFavorites, setlocalFavorites] = useState([]);\n  //   const [teste, setTeste] = useState(false);\n\n  //   const handleShare = () => {\n  //     copy(\n  //       `http://localhost:3000${history.location.pathname.replace(\n  //         '/in-progress',\n  //         '',\n  //       )}`,\n  //     );\n  //     setCopy(true);\n  //   };\n\n  //   useEffect(() => {\n  //     const favoritesRecipes = JSON.parse(\n  //       localStorage.getItem('favoriteRecipes'),\n  //     );\n  //     setlocalFavorites(favoritesRecipes);\n  //     if (favoritesArray.some((item) => item.id === id)) {\n  //       setIsFavorite(false);\n  //     }\n  //   }, []);\n\n  //   const verifyType = (item) => {\n  //     if (item.type === 'drink') {\n  //       const { pathname } = window.location;\n  //       const drinks = pathname === '/drinks';\n  //       return drinks;\n  //     }\n  //   };\n\n  //   const handleFavorites = (target) => {\n  //     console.log(target);\n  //     setTeste(!teste);\n  //     const favorites = JSON.parse(localStorage.getItem('favoriteRecipes'));\n  //     let arrayFavorites = [];\n  //     if (\n  //       favoritesArray.length\n  //       && favoritesArray.some((item) => item.id === id)\n  //     ) {\n  //       setIsFavorite(true);\n  //     } else {\n  //       setIsFavorite(false);\n  //     }\n  //     if (\n  //       favorites.length\n  //       && favorites.some((item) => item.id === id)\n  //     ) {\n  //       arrayFavorites = favorites.filter((e) => e.id !== target);\n  //       localStorage.setItem('favoriteRecipes', JSON.stringify(arrayFavorites));\n  //       setFavoritesArray(arrayFavorites);\n  //     }\n  //   };\n\n  return (\n    <div>\n      <Header title=\"Favorite Recipes\" hasSearch={ bool } />\n      <ButtonFilterFavorite />\n    </div>\n  //     <div>\n  //       {console.log('ai', localFavorites)}\n  //       <Header title={ favorite } hasSearch={ bool } />\n  //       <FiltersBtns />\n  //       <div>\n  //         {localFavorites\n  //           && localFavorites.map((item, i) => (\n  //             <div key={ i }>\n  //               <Link\n  //                 to={\n  //                   verifyType(item) === false\n  //                     ? `/drinks/${item.id}`\n  //                     : `/foods/${item.id}`\n  //                 }\n  //               >\n  //                 <img\n  //                   src={ item.image }\n  //                   alt=\"imagem\"\n  //                   data-testid={ `${i}-horizontal-image` }\n  //                   className=\"img-done\"\n  //                 />\n  //                 <h1 data-testid={ `${i}-horizontal-name` }>{item.name}</h1>\n  //               </Link>\n  //               <h4 data-testid={ `${i}-horizontal-top-text` }>\n  //                 {item.nationality}\n  //                 {' '}\n  //                 -\n  //                 {' '}\n  //                 {item.category}\n  //               </h4>\n  //               <h3 data-testid={ `${i}-horizontal-top-text` }>\n  //                 {item.alcoholicOrNot ? item.alcoholicOrNot : null}\n  //               </h3>\n\n  //               <h3 data-testid={ `${i}-horizontal-done-date` }>{item.doneDate}</h3>\n  //               {item.tags.map((e) => (\n  //                 <h4 data-testid={ `${i}-${e}-horizontal-tag` } key={ e }>\n  //                   {e}\n  //                 </h4>\n  //               ))}\n  //               {!isCopy ? (\n  //                 <input\n  //                   type=\"image\"\n  //                   src={ share }\n  //                   data-testid={ `${i}-horizontal-share-btn` }\n  //                   alt=\"searchIcon\"\n  //                   onClick={ handleShare }\n  //                 />\n  //               ) : (\n  //                 'Link copied!'\n  //               )}\n  //               <button\n  //                 type=\"button\"\n  //                 onClick={ () => handleFavorites(item.id) }\n  //               >\n  //                 <img\n  //                   src={ !isFavorite ? blackHeartIcon : whiteHeartIcon }\n  //                   alt=\"blackHeart\"\n  //                   data-testid=\"favorite-btn\"\n  //                 />\n  //               </button>\n  //             </div>\n  //           ))}\n  //       </div>\n  //     </div>\n  );\n}\n\nexport default FavoritesRecipes;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CACA;AACA;AACA;AACA;;AACA,OAAOC,oBAAP,MAAiC,oCAAjC;;;AAEA,SAASC,gBAAT,GAA4B;EAC5B;EACA;EACE,MAAMC,IAAI,GAAG,KAAb,CAH0B,CAI1B;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE,QAAC,MAAD;MAAQ,KAAK,EAAC,kBAAd;MAAiC,SAAS,EAAGA;IAA7C;MAAA;MAAA;MAAA;IAAA,QADF,eAEE,QAAC,oBAAD;MAAA;MAAA;MAAA;IAAA,QAFF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF,CAKA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EArEA;AAuED;;KAxIQD,gB;AA0IT,eAAeA,gBAAf"},"metadata":{},"sourceType":"module"}